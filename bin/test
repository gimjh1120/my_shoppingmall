import 'dart:io';

class Product {
  String productName;
  int productPrice;

  Product({required this.productName, required this.productPrice});
}

class CartItem {
  Product product;
  int quantity;

  CartItem({required this.product, required this.quantity});
}

List<Product> products = [
  Product(productName: 'shirt', productPrice: 45000),
  Product(productName: 'onepiece', productPrice: 30000),
  Product(productName: 'short sleeved', productPrice: 35000),
  Product(productName: 'short pants', productPrice: 38000),
  Product(productName: 'socks', productPrice: 5000)
];

List<CartItem> cart = [];

void main() {
  print('콘솔 쇼핑몰 프로그램 시작');
  while (true) {
    print('\n[1] 상품 목록  보기/ [2] 장바구니에 담기 / [3] 장바구니의 총 가격 보기 / [4] 프로그램 종료');
    print('원하는 기능을 선택해 주세요.');
    stdout.write(':');
    String? input = stdin.readLineSync();

    if (input == null) {
      print('지원하지 않는 기능입니다! 다시 시도해 주세요.');
      return;
    }

    switch (input) {
      case '1':
        showProducts();
        //print('[1] 상품 목록  보기');
        break;
      case '2':
        addToCart();
        //print('[2] 장바구니에 담기');
        break;
      case '3':
        showTotal();
        //print('[3] 장바구니의 총 가격 보기');
        break;
      case '4':
        exitProgram();
        //print('프로그램을 종료합니다. 이용해 주셔서 감사합니다!');
        break;
      default:
        print('잘못된 입력입니다. 다시 입력해주세요.');
    }
  }
}

void exitProgram() {
  while (true) {
    // 반복문을 사용하여 올바른 입력이 들어올 때까지 반복
    print('정말 프로그램을 종료하시겠습니까?(y/n)');
    stdout.write(':');
    String? input = stdin.readLineSync();

    if (input == 'y' || input == 'Y') {
      exit(0);
    } else if (input == 'n' || input == 'N') {
      print('프로그램을 종료하지 않습니다.');
      return; // 함수 종료
    } else {
      print('잘못 입력하셨습니다. 다시 입력해주세요.');
      // 반복문이기 때문에 처음으로 돌아가지 않고 다시 입력 요청
    }
  }
}


void showProducts() {
  print('\n******** 상품 목록 ********\n');
  for (var productList in products) {
    print('${productList.productName} | ${productList.productPrice}원');
  }
  print('\n***************************');
}

//장바구니에 담기
void addToCart() {
  print('\n상품명을 입력해 주세요.');
  stdout.write(':');
  String? input = stdin.readLineSync();

  //입력 값이 null이거나 빈 값일 경우
  if (input == null || input.isEmpty) {
    print('올바른 상품명을 입력해 주세요.');
    return;
  }

  //입력 값이 products 리스트에 있는지 확인
  var inputProduct = products.firstWhere(
    (product) => product.productName == input,
    orElse: () => Product(productName: 'null', productPrice: 0),
  );

  //리스트에 없는 경우
  if (inputProduct.productName == 'null') {
    print('해당 상품이 존재하지 않습니다.');
    return;
  }

  //상품 수량 입력
  print('\n상품 개수를 입력해 주세요');
  stdout.write(':');
  String? inputQuantity = stdin.readLineSync();

  //입력한 값이 null이거나 빈 값인 경우
  if (inputQuantity == null || inputQuantity.isEmpty) {
    print('입력값이 올바르지 않아요!');
    return;
  }

  //입력한 값을 int로 변환
  //?? ''은 String inputQuantity의 값이 null인 경우 ''으로 반환
  //?? 0은 int inputQuantity의 값이 null인 경우 0으로 반환
  int intQuantity = int.tryParse(inputQuantity ?? '') ?? 0;

  //입력한 값이 0보다 작거나 같은 경우
  if (intQuantity <= 0) {
    print('올바른 수량을 입력해 주세요.');
    return;
  }

  //입력한 상품명과 상품 개수를 cart에 추가
  var cartItem = cart.firstWhere(
    (item) => item.product.productName == inputProduct.productName,
    orElse: () => CartItem(product: inputProduct, quantity: 0),
  );

  //cart에 상품이 담겨있는 경우 담겨있는 상품 개수에 입력한 상품 개수 추가
  if (cart.contains(cartItem)) {
    cartItem.quantity += intQuantity;
  }
  //cart에 상품이 담겨있지 않은 경우 상품, 개수 추가
  else {
    cart.add(CartItem(product: inputProduct, quantity: intQuantity));
  }

  print('장바구니에 ${inputProduct.productName} $intQuantity개 추가되었습니다.');
}

//장바구니의 총 가격 보기
void showTotal() {
  //총액 변수 생성
  int total = 0;

  // 장바구니가 비었는지 먼저 확인
  if (cart.isEmpty) {
    while (true) {
      print('\n장바구니가 비어 있습니다. 상품을 추가하시겠습니까?(y/n)');
      stdout.write(':');
      String? addInput = stdin.readLineSync();

      if (addInput == 'y' || addInput == 'Y') {
        showProducts();
        addToCart();
      } else if (addInput == 'n' || addInput == 'N') {
        print('상품을 추가하지 않습니다.');
        return; // 함수 종료
      } else {
        print('잘못 입력하셨습니다. 다시 입력해주세요.');
        // 반복문이기 때문에 처음으로 돌아가지 않고 다시 입력 요청
      }
    }
  }

  print('\n****** 장바구니 목록 ******\n');

  //장바구니에 추가된 값 출력
  for (var cartList in cart) {
    //각 상품 총 가격 = 장바구니 상품 수량 * 장바구니 상품 가격
    int productPrice = cartList.quantity * cartList.product.productPrice;
    print(
        '${cartList.product.productName} ${cartList.quantity}개 $productPrice원');

    //총액을 호출된 각 상품의 총 가격을 합산
    total += productPrice;
  }
  print('\n***************************\n');
  print('총 금액은 $total원 입니다.');
}
